name: continuous integration
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    env:
      TAG: py${{ matrix.py_version }}-${{ matrix.variant }}
      IMAGE: praekeltfoundation/django-bootstrap:py${{ matrix.py_version }}-${{ matrix.variant }}
    strategy:
      fail-fast: false
      matrix:
        py_version: [2.7, 3.6, 3.7]
        test_project: [django1]
        variant: [stretch]
        exclude:
          - py_version: 3.7
            test_project: django1
        include:
          - py_version: 3.7
            test_project: django2

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py_version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
      - name: Run tests
        run: |
          docker build --pull --cache-from $IMAGE --build-arg PYTHON_VERSION=${{ matrix.py_version }}-${{ matrix.variant }} --tag $IMAGE .
          docker build -t "mysite:$TAG" --build-arg VARIANT=$TAG --build-arg PROJECT=${{ matrix.test_project }} tests
          pytest -v tests/test.py --django-bootstrap-image="mysite:$TAG"
          flake8 gunicorn/config.py
          cd tests; flake8
  build:
    if: github.event_name == 'push'
    needs: tests
    name: Docker Build
    runs-on: ubuntu-latest
    env:
      IMAGE: praekeltfoundation/django-bootstrap:py${{ matrix.py_version }}-${{ matrix.variant }}
    strategy:
      matrix:
        py_version: [2.7, 3.6, 3.7]
        test_project: [django1]
        variant: [stretch]
        tag_latest: [latest]
        semver_precision: 1
        exclude:
          - py_version: 3.7
            test_project: django1
        include:
          - py_version: 3.7
            test_project: django2
            version_latest: -L
          - py_version: 3.6
            semver_precision: 2

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python_version: 3.7
      - name: build and deploy
        run: |
          pip install docker-ci-deploy==0.3.0
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          dcd -t ${{matrix.variant}} ${{matrix.tag_latest}} -V "py${{matrix.py_version}}" --version-semver -P ${{matrix.semver_precision}} ${{matrix.version_latest}} $IMAGE
