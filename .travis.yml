dist: xenial
services: docker
language: python
python: '3.7'

# Only build develop. PRs still get built. If/when versioning is added, more
# branches could need to be built.
branches:
  only:
    - develop

env:
  global:
    - IMAGE_USER=praekeltfoundation
    - REGISTRY_USER=praekeltorgdeploy
    - secure: "OTDDQGC73REt7DjF4XsJ1oFv5pEOXgtGZXQ42dU4p+zDDgJzG6B6nS6dIgYUo4mp8OwOsa5vG0j8Vh1EVz+IurNJdsghDQhuZvuZo943GIWJSnYN9Yy8R297GImTg8sTCgbMO1C3gW81Mfd+cm9/aqm+CZwmGe0oxbss8b5Tqdg8liknEdWy+tY5FXdcbxjIQ+mdrVYGQq5FxXPnwFvERll/kqu++9rfvPs25vA6QaFoItaFKcdaFrbk2PuBAryMJGETQILZcaiCfR2JZ4wyYQAslBOz5tkySjt2pQxfxGM+kb8ztZhmKlids6nCqAsQ2eNnjKeLVwJnrOXNElXF3InLs2Sj9YiChm6iKei1X1CD/7U2vj6ZObh3KucuNQyp/FYMf43mBxb/4Qlo5uRx69Nbx08m3bRLABoSbu0PKN+YqBEasbW3dncGvLBDFnOtEsxS3gAGYZlO7r7RaMINWN9xLp5uqrUSwBNpqh3gxAOrQQfvII4reEkNQht/ojy/gH0ZUBJ/BlkSI3217sDlKUKSD6L+ByAWFlIAWzU4jYipj3CgMM+MjhPG3BeZnz/R1yIbP/WNZUrz1ToP8+Qg3rZvln2kAENOjOqE8VpxzOBTtGlJak5/HEPFjaAyveew8kfSq5W9i88BEkVuafivQVWHLzNUg970BEy/4EeN5wc="
  matrix:
    # VERSION_LATEST=1 should correspond to the latest Python release
    # TAG_LATEST=1 should correspond to the latest Debian release (VARIANT)
    - PYTHON_VERSION=2.7 VARIANT=stretch TEST_PROJECT=django1 VERSION_LATEST=  TAG_LATEST=1
    - PYTHON_VERSION=3.6 VARIANT=stretch TEST_PROJECT=django1 VERSION_LATEST=  TAG_LATEST=1 SEMVER_PRECISION=2
    - PYTHON_VERSION=3.7 VARIANT=stretch TEST_PROJECT=django2 VERSION_LATEST=1 TAG_LATEST=1

install:
  - pip install -r tests/requirements.txt

before_script:
  - tag="py$PYTHON_VERSION-$VARIANT"
  - image="$IMAGE_USER/django-bootstrap:$tag"
  # Fetch existing image to use as cache
  - docker pull "$image" || true
script:
  - docker build --pull --cache-from "$image" --build-arg PYTHON_VERSION="$PYTHON_VERSION-$VARIANT" --tag "$image" .
  - docker build -t "mysite:$tag" --build-arg VARIANT="$tag" --build-arg PROJECT="$TEST_PROJECT" tests
  - pytest -v tests/test.py --django-bootstrap-image="mysite:$tag"
  - flake8 gunicorn/config.py
  - cd tests; flake8

after_script:
  - docker images

before_deploy:
  - pip install docker-ci-deploy==0.3.0
  - echo "$REGISTRY_PASS" | docker login -u "$REGISTRY_USER" --password-stdin
deploy:
  provider: script
  script: dcd -t "$VARIANT" ${TAG_LATEST:+latest} -V "py$PYTHON_VERSION" --version-semver -P ${SEMVER_PRECISION:-1} ${VERSION_LATEST:+-L} "$image"
  on:
    branch: develop
